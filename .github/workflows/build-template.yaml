name: "Build For Template"
on:
  workflow_call:
    inputs:
      self-hosted:
        required: true
        type: boolean
      runner-labels:
        required: true
        type: string
      language:
        required: true
        type: string
      working-repo:
        required: true
        type: string
      image-name:
        required: true
        type: string
      registry-name:
        required: true
        type: string
        default: 'ghcr.io'
      registry-username:
        required: true
        type: string
        default: ${{ github.actor }}
      registry-password:
        required: true
        type: string
        default: ${{ secrets.GITHUB_TOKEN }}  
    secrets: 
      registry-name:
        required: true
      registry-username:
        required: true
      registry-password:
        required: true
      ACR_PASSWORD:
        required: true
      ACR_REG_NAME:
        required: true
      ACR_USERNAME:
        required: true
    #  envPAT:
    #    required: true

jobs:
  check-inputs: 
    name: Check Inputs
    runs-on: [ '${{ fromJSON(inputs.runner-labels).*.label }}' ]
    steps:
    - name: Display Inputs 
      run: | 
        echo ${{ inputs.self-hosted}}
        echo ${{ inputs.runner-labels}}
        echo ${{ fromJSON(inputs.runner-labels).*.label }}
        echo ${{ inputs.language}}
        echo ${{ inputs.working-repo}}
        echo ${{ inputs.image-name}}
  docker-build:
    runs-on: [ '${{ fromJSON(inputs.runner-labels).*.label }}' ]
    name: "Docker Build"
    needs: check-inputs
    environment: AZURE_ENV
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Node.js 12.x
        if: ${{ inputs.language == 'node' }}
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'  
      - name: Set up Maven
        if: ${{ inputs.language == 'java' && inputs.self-hosted == true }}
        uses: stCarolas/setup-maven@v4.4
        with:
          maven-version: 3.8.2
      - name: Set up JDK 17
        if: ${{ inputs.language == 'java' }}
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64
      #- name: Test with Maven
      #  if: ${{ inputs.language == 'java' }}
      #  run: mvn --no-transfer-progress verify
      - name: printprint
        run: | 
          echo --------------INPUTS
          echo ${{ inputs.registry-name }}
          echo ${{ inputs.registry-username }}
          echo ${{ inputs.registry-password }}
          echo --------------SECRETS
          echo ${{ secrets.registry-name }}
          echo ${{ secrets.registry-username }}
          echo ${{ secrets.registry-password }}
          echo --------------ENV-SECRETS
          echo ${{ secrets.ACR_PASSWORD }}
          echo ${{ secrets.ACR_REG_NAME }}
          echo ${{ secrets.ACR_USERNAME }}
      - name: Set up Docker Buildx
        if: ${{ inputs.self-hosted == true }}
        uses: docker/setup-buildx-action@v2
      - name: Log in to the Container registry (inputs)
        uses: docker/login-action@v1
        with:
          registry: ${{ inputs.registry-name }} # Using Github container repository
          username: ${{ inputs.registry-username }}
          password: ${{ inputs.registry-password }}
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.registry-name }} # Using Github container repository
          username: ${{ secrets.registry-username }}
          password: ${{ secrets.registry-password }}
      - name: Build and push Docker image for server
        uses: docker/build-push-action@v2
        with:
          context: './'
          push: true
          tags: ${{ secrets.registry-name }}/${{ inputs.working-repo }}/${{ inputs.image-name }}:0.0.${{ github.run_number }}
            #labels: ${{ steps.meta.outputs.labels }}
